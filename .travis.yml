os:
  - linux
python:
  - 2.7
env:
  - CMOR_PYTHON_VERSION='2.7'
  - CMOR_PYTHON_VERSION='3.6'
  - CMOR_PYTHON_VERSION='3.7'
services:
  - docker

sudo: false

before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" && $CMOR_PYTHON_VERSION == '2.7' ]]; then wget --no-check https://repo.continuum.io/miniconda/Miniconda2-4.3.21-Linux-x86_64.sh
    -O miniconda.sh ; fi
  - if [[ $TRAVIS_OS_NAME == "linux" && $CMOR_PYTHON_VERSION == '3.6' ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    -O miniconda.sh ; fi
  - if [[ $TRAVIS_OS_NAME == "linux" && $CMOR_PYTHON_VERSION == '3.7' ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    -O miniconda.sh ; fi
  - if [[ $TRAVIS_OS_NAME == "osx" && $CMOR_PYTHON_VERSION == '2.7' ]]; then wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh
    -O miniconda.sh; fi
  - if [[ $TRAVIS_OS_NAME == "osx" && $CMOR_PYTHON_VERSION == '3.6' ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
    -O miniconda.sh; fi
  - if [[ $TRAVIS_OS_NAME == "osx" && $CMOR_PYTHON_VERSION == '3.7' ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
    -O miniconda.sh; fi
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export UVCDAT_ANONYMOUS_LOG=no
  - bash miniconda.sh -b -p $HOME/miniconda
  - conda config --set always_yes yes --set changeps1 no
  - conda update -y -q conda
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export CONDA_COMPILERS="gcc_linux-64 gfortran_linux-64"; fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then export CONDA_COMPILERS="clang_osx-64 gfortran_osx-64"; fi
  - if [[ $CMOR_PYTHON_VERSION == '2.7' ]]; then conda create -q -n py2.7 -c cdat/label/nightly -c conda-forge -c cdat ossuuid udunits2 hdf5 libnetcdf numpy openssl lazy-object-proxy cdms2 python=2.7 $CONDA_COMPILERS testsrunner; fi
  - if [[ $CMOR_PYTHON_VERSION == '3.6' ]]; then conda create -q -n py3.6 -c cdat/label/nightly -c conda-forge -c cdat ossuuid udunits2 hdf5 libnetcdf numpy openssl lazy-object-proxy cdms2 python=3.6 $CONDA_COMPILERS testsrunner; fi
  - if [[ $CMOR_PYTHON_VERSION == '3.7' ]]; then conda create -q -n py3.7 -c cdat/label/nightly -c conda-forge -c cdat ossuuid udunits2 hdf5 libnetcdf numpy openssl lazy-object-proxy cdms2 python=3.7 $CONDA_COMPILERS testsrunner; fi
  - if [[ $CMOR_PYTHON_VERSION == '2.7' ]]; then source activate py2.7; fi
  - if [[ $CMOR_PYTHON_VERSION == '3.6' ]]; then source activate py3.6; fi
  - if [[ $CMOR_PYTHON_VERSION == '3.7' ]]; then source activate py3.7; fi
install:
  - export PREFIX=$(python -c "import sys; print(sys.prefix)")
  - git clone https://github.com/PCMDI/cmip6-cmor-tables
  - ln -s cmip6-cmor-tables/Tables Tables
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export LDSHARED_FLAGS="-shared -pthread"; fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then export LDSHARED_FLAGS="-bundle -undefined dynamic_lookup"; fi
  - "./configure --prefix=$PREFIX --with-python --with-uuid=$PREFIX --with-udunits2=$PREFIX
    --with-netcdf=$PREFIX  --enable-verbose-test"
  - make install

script:
  - make test
  - export PYTHONPATH=Test/:$PYTHONPATH
  - python run_tests.py -v2 -n1 -H Test/test_python_CMIP6_CV*.py

after_failure:
  - ulimit -a
  - free -m
  - find CMIP6/
  - df -kh ./
  - ls -lR
  - cat ~/build.sh

after_success:
  - if [[ $TRAVIS_BRANCH == "master" && $TRAVIS_OS_NAME == "osx" ]]; then bash scripts/conda_upload.sh ${TRAVIS_BRANCH} ; fi
  - if [[ $TRAVIS_BRANCH == "master" && $TRAVIS_OS_NAME == "linux" ]]; then docker run -v `pwd`:/travis_home -e CONDA_UPLOAD_TOKEN=${CONDA_UPLOAD_TOKEN} -a STDOUT -a STDERR centos:6.8 /travis_home/scripts/conda_upload.sh ${TRAVIS_BRANCH} ; fi
